* 文档结构
org是基于Outline模式的，它提供了更灵活的编辑结构文件的命令

** 大纲
Org是在大纲模式之上实现的。大纲模式可以让我们用层次结构来组织文档，
这是笔记和想法最好的实现方式。这种结构可以折叠文档的一部分而只是显
示文档的大概结构或者只显示我们正在处理的部分。Org大大简化了大纲模式
的使用，它把大纲模式的整个显示/隐藏功能整合到了一个命令中:org-cycle
这个命令绑定到了TAB键上。

** 标题
标题定义了大纲树的结构。它以牌一行左边缘的一个或多个星号开头，例如：
#+BEGIN_SRC 
* Top level headline
** Second level
*** 3rd level
    some text
*** 3rd level
    more text

* Another top level headline
#+END_SRC
如果你不喜欢太多的星号，可以以空格后加一个星号作为标题的开头

** 视图循环
大纲模式可以隐藏缓冲区里的部分正文。Org用绑定到TAB和S-TAB上的两个全命令来改变视图
| TAB             | 子树循环：当加上一个前缀参数时(C-u TAB),在下面的姿态中改变当前子树的视图 |
|                 | FOLDED -> CHILDREN --> SUBTREE                                           |
|                 | 当加上shift键时会触发全局的视图循环                                      |
| S-TAB和C-u      | 全局循环: 使整个缓冲区在下列状态中循环                                   |
|                 | OVERVIEW -> ShowALL                                                      |
| C-u C-u C-u TAB | 显示全部，包括Drawers                                                    |
当Emacs刚打开文件时，全局的状态是OVERVIEW,也即只有顶层的标题可见.这可以通过变量org-startup-folded来设置。
也可以通过startup关键字设置只对单个文件有效:
#+BEGIN_SRC 
#+STARTUP: content
#+END_SRC

** 移动
下面的命令可以跳转到缓冲区其他的标题。
| C-c C-n | 下一个标题     |
| C-c C-p | 上一个标题     |
| C-c C-f | 下一个同级标题 |
| C-c C-b | 上一个同级标题 |
| C-c C-u | 回到上层标题   |

** 结构编辑
| M-RET               | 插入一个同级标题。如果光标在文本列表中,创建一个新的项      |
|                     | 如果牌一行的中间，这一行会被分开，后面的一部分成为新的标题 |
| M-S-RET             | 插入一个和当前标题同级的TODO项                             |
| TAB(新的空的条目中) | 如果新的条目中还没有文字，TAB会调整到合适的级别            |
| M-LEFT/REGHT        | 将当前的标题提升/降低一个等级                              |
| M-S-LEFT/RIGHT      | 将当前子提升/降低一个等级                                  |
| M-S-UP/DOWN         | 将子树上/下移(和前后个子树交换)                            |
| C-c C-w             | 将条目或区域传送到另一个文件中。                           |
| C-x n s/w           | 将缓冲区视图局限到当前子树中/两次放宽视图                  |
如果有活动区域(暂时标记状态),提升和降低功能将会对区域中的所有标题起作用.

** 稀疏树
Org模式的一个重要的功能是能根据大纲树中选择的信息构造出稀疏的树，这样文档就可以尽可能地折叠,
但是选择的信息和它对应的标题会显示出来,试下就知道它是怎样工作的了.
Org模式有几个命令可以创建这种树,这些命令都可以通过调试器来使用:
| C-c /   | 它会提示再输入一个字符来选择稀疏树的创建命令                |
| C-c 、r | 触发后,会提示输入匹配串，并且将所有匹配的项显示成稀疏树命令 |
其他的基于TODO关键字,标签或属性来选择标题的稀疏树命令

** 文本列表
在大纲树的一项中,自定义格式的列表可以提供更多的组织结构,也使我们可以得到一个复选框
Org模式可以处理这种列表,并且HTML导出器也支持这种格式.
Org能够识别有序列表,无序列表和描述列表

无序列表项以'-', '+'或者'*'开头
有序列表项以'1.', '1)'开头
描述列表用'::'将项和描述分开

同一列表中的项的第一行必须缩进相同程序.当下一行的缩进与列表项的开头的符号或者数字相同或者更小时,
这一项就结束了.当所有的项都关上时,或者后面有两个空行时,列表就结束了.例如:
#+BEGIN_SRC 
** Lord of the Rings
   My favourite scenes are (in this order)
   1. The attack of the Rohirrim
   2. Eowyn's fight with the witch king
      + this was already my favourite scene in the book
      + I really like Miranda Otto.
   Important actors in this film are:
   - Elijah Wood :: He plays Frodo
   - Sean Austin :: He plays Sam, Frodo's Friend.

#+END_SRC
| Tab            | 折叠项                                                                                               |
| M-RET          | 在当前级别插入一个项,有前缀时是强制新建一个标题                                                      |
| M-S-RET        | 插入一个带有复选框的项                                                                               |
| M-S-UP/DOWN    | 将当前项和它的子项向上/下移动(和相同的缩进的前/后一个基交换位置).如果列表是有序的,数字就不会自动改变 |
| M-LEFT/M-RIGHT | 提升、降低项的缩进，不包含子项                                                                       |
| M-S-LEFT/RIGHT | 提升、降低项的缩进，包含子项                                                                         |
| C-c C-c        | 如果项中有复选框，就触发改变其状态。并且自动保持西藏的符号与缩进在列表中的一致性                     |
| C-c -          | 循环改变将当前列表的项标志符号                                                                       |

** 脚注
脚注就是以脚注定义符号开头的一段话,脚注定义符号是将脚注名称放在一个方括号里形成的,要求放在
第0列,不能缩进.而引用就是在正文中将脚注名称用方括号括起来.例如:
#+BEGIN_SRC 
The Org Homepage[fn:1]. noew looks a lot better than it used to.
...
[fn:1] The link is: http://orgmode.org

#+END_SRC
用下面的命令来处理脚注:
| C-c C-x | 这是一个移动命令.当光标处理引用处时,跳转到它的定义;当光标处理定义处时,跳转到第一个        |
|         | 引用处.其他情况下,新建一个脚注.当有前缀时,会提供一个菜单供选择操作,其中包括重新给脚注编号 |
| C-c C-c | 在定义和引用之间跳转                                                                      |

* 表格
Org提供了快速易用的表格编辑功能.通过调用Emacs内嵌的'calc'包(对Emacs的计算器可以查看Emacs Calculator手册)
它支持类似于制表软件的计算操作.
Org能够很容易地处理ASCII文本表格.任何以'|'为首个非空字符的行都会被认为是表格的一部分.'|'列分隔符.
一个表格是下面的样子:
| Name   | Phone | Age |
|--------+-------+-----|
| Petter |  1234 |  17 |
|--------+-------+-----|
| Anna   |  4569 |  26 |
当你在表格内部输入TAB,RET或者<C-c> <C-c>时表格都会自动调整.TAB会进入下一个区域(RET进入下一行)
并且创建一个新的行.表格的缩进程序在第一行设定.以'|-'开头的一行会作为一个水平分隔行,
当它下次调整排列时会将'-'扩展到填充整行.
| Name | Phone | AGE |
|------+-------+-----|
|      |       |     |

*** 创建和转换
<C-c |> 将活动区域(选中区域)转换成一个表.如果第一行至少有一个Tab字符,就用TAB划分内容;如果第一行
都有逗号,就分逗号划分内容;否则就用空白符来划分区域.如果当前没有活动区域就会建立一个空的Org表格.
其实用|Name|Phone|Age <C-c RET>来建表会更简单一点.

*** 调整和区域移动
| C-c C-c | 调整表格,不移动光标                          |
|---------+----------------------------------------------|
| TAB     | 调整表格,将光标移到下一个区域,必要时新建一行 |
| S-TAB   | 调整表格,将光标移到上一个区域                |
| RET     | 调整表格,将光标移到下一行,必要时会新建一行   |
|---------+----------------------------------------------|

*** 编辑行和列
| M-LEFT/RIGHt | 左/右移当前列                                                                          |
|--------------+----------------------------------------------------------------------------------------|
| M-S-LEFT     | 删除当前行                                                                             |
| M-S-RIGHT    | 删除当前行                                                                             |
| M-S-RIGHT    | 在光标位置左边添加一列                                                                 |
| M-UP/DOWN    | 上/下移当前行                                                                          |
| M-S-UP       | 删除当前行                                                                             |
| M-S-Down     | 在当前行上面添加一行.如果有前缀,则在下面添加一行                                       |
| C-c -        | 在当前行下面添加一个水平线.如果带前缀,则在上面添加一行水平线                           |
| C-c RET      | 在当前行下面添加一个水平线.并将光标移动到下一行                                        |
| C-c ^        | 将表排序.当前位置所在的列作为排序的依据.排序在距当前位置最近的两个水平线之间的行中进行 |

* 超链接
就像HTML一样,Org也提供了文件的内部链接,以及到其他文件,新闻组/电子邮件的外部链接等链接格式.

** 链接格式
Org能够识别URL格式的文本并将它们处理成可点击的链接.通常链接格式是这样的:
#+BEGIN_SRC 
[[link][description]] 或者[[link]]
#+END_SRC
链接输入一旦完成(所有的括号都匹配),Org改变它的视图.视野会看到"Description"和"link",而不是
#+BEGIN_SRC 
[[link][description]]
#+END_SRC
和
#+BEGIN_SRC 
[[link]]
#+END_SRC
要想编辑链接,可以光标置于链接上并键入C-c C-l

** 内部链接
如果一个链接地址并不是URL的形式,就会作为当前文件内部链接来处理,最重要的一个例子是:
#+BEGIN_SRC 
[[#my-custom-id]]
#+END_SRC
它会链接到CUSTOM_ID属性是"my-custom-id"的项
类似
#+BEGIN_SRC 
[[My Target]]
#+END_SRC
和
#+BEGIN_SRC 
[[My Target] [Find my target]]
#+END_SRC
的链接,点击后本文件中查找对应的目标"<<My Target>>"

** 4.3 外部链接
Org支持的链接格式包括文件,网页,新闻组,BBDB数据库项,IRC会话和记录.外部链接是URL格式的定位器.
以识别符开头,后面跟着一个冒号,冒号后面不能有空格,下面是一些例子:
#+BEGIN_SRC 
http://www.astro.uva.nl/~dominik    on the web
file://home/dominik/images/jupiter.jps    fil, absolute path
/home/dominik/images/jupiter.jpg          same as above
file:papers/last.pdf                      file,relative path
#+END_SRC

** 4.4 使用链接
Org提供了以下方法来创建和使用链接

| C-c l                 | 在当前位置保存一个链接.这是一个全局命令(你可以设置自己的快捷键),可以在任何类型的缓冲区中使用. |
|                       | 链接保存下来以便插入Org文件中                                                                 |
|-----------------------+-----------------------------------------------------------------------------------------------|
| C-c C-l               | 插入一个链接.穷乡僻壤让你输入,你可以输入一个链接,也可以用上/下键来获取保存的链接              |
|                       | 它还会让你输入描述信息                                                                        |
|-----------------------+-----------------------------------------------------------------------------------------------|
| C-c C-l(光标在链接上) | 当光标牌链接上时,你可以修改链接                                                               |
|-----------------------+-----------------------------------------------------------------------------------------------|
| C-c C-o 或者mouse-1   | 打开链接                                                                                      |
| 或者mouse-2           |                                                                                               |
|-----------------------+-----------------------------------------------------------------------------------------------|
| C-c &                 | 跳回到一个已记录的地址.用C-c %可以将地址记录下来,内部链接后面                                 |
|                       | 的命令也会自动将地址记录下来.使用这个命令多次可以一直往前定位                                 |
|-----------------------+-----------------------------------------------------------------------------------------------|

** 4.5 目标链接
文件链接可以包含一些其他信息使得进入链接时可以到达特定的位置.比如双冒号之后的一个行号.
下面是一些包含搜索定位功能的链接例子以及其说明:
#+BEGIN_SRC 
file:~/code/main.c::255    进入到255行
file:~/xx.org::My Target   找到目录'<<My Target>>'
file:~/xx.org/::#my-custom-id    查找自定义id的项
#+END_SRC

* 5 待办事项
当标题以TODO开头时它就成为了一个TODO项,例如:
#+BEGIN_SRC 
***TODO Write letter to Sam Forture
#+END_SRC

下面是一些使用TODO项的常用命令:
| C-c C-t      | 将当前项的状态在(unmarked) -> TODO -> DONE 之间循环切换,                 |
|              | 同样的切换也可以在时间轴(timeline)和议程(agenda)的缓冲区                 |
|              | 中用t键"远程"进行.                                                       |
|--------------+--------------------------------------------------------------------------|
| S-RIGHT/LEFT | 选择下一个/上一个TODO状态,与上面的循环方式相同                           |
|--------------+--------------------------------------------------------------------------|
| C-c / t      | 在稀疏树中显示TODO项,将Buffer折叠,但是会显示TODO项和它们所在的层次的标题 |
| C-c a t      | 显示全局TODO列表.从所有的议程文件中收集TODO项到一个缓冲区中.             |
| C-c a t      | 显示全局TODO列表.从所有的议程文件中收集TODO项到一个缓冲区中              |
| S-M-RET      | 在当前项下插入一个新的TODO                                               |

改变TODO的状态会触发标签改变.查看选项org-todo-state-tags-triggers的描述获得更多信息.

** 5.2 多状态工作流程
你可以用TODO关键字来定义不再的状态,用以处理项,比如:
#+BEGIN_SRC 
(setq org-todo-keywords
    '((sequence "TODO" "FEEDBACK" "VERIFY" "|" "DONE" "DELEGATED")))
#+END_SRC
竖起线将TODO关键字(还需要进一步的动作)和DONE状态(不需要进一步的动作)分隔开.
如果你不给出竖起线,最后一个状态会作为DONE状态.设置之后,C-c C-t就会将状态
从TODO转换到FEEDBACK,再转换到VERIFY,最后到DONE和DELEGATED.

有时你可能希望同时使用几个不同的TODO状态集合.例如,你可能想要一个基本的DOTO/DONE,
以及一个修改Bug的工作流程和一个隔开的状态来表示取消的项目(既还是DONE,也不需要进一步
的动作),你可以这样设置:
#+BEGIN_SRC 
(setq org-todo-keywords
    '((sequence "TODO(t)" "|" "DONE(d)")
      (sequence "REPORT(r)" "BUG(b)" "KNOWNCAUSE(k)" "|" "FIXED(f)")
      (sequence "|" "CANCELED(c)")))
#+END_SRC
关键字应该各不相同,这样对于一个选项Org才知道该用哪个状态序列(集合).
例子中也给出了快速使用一个关键字的方法,就是在关键字后面括号中给出快捷
字母--当用C-c C-t 时,会询问,让你输入一个字母.要定义只在一个文件中有效的
TODO关键字,可以在文件中任意地方给出下面的文本:
#+BEGIN_SRC 
#+TODO: TODO(t) | DONE(d)
#+TODO: REPORT(r) BUG(b) KNOWNCAUSE(k) | FIXED(f)
#+TODO: | CANCELED(c)
#+END_SRC
当改变这些行中的一行后,光标仪在改变行上,用C-c C-c让改变生效.

** 5.3进度日志
当你改变一个TODO状态为DONE时,或者当你每次改变一个TODO项的状态时,Org都会自动
记录时间戳或者作一个记录.这是调试可配置的,可以基于每一个关键字进行设置,
并且可以定位到一个文件甚至子树.

*** 完成的项目
最基本的日志功能是跟踪一个特定项目的完成.这可以这样实现:
#+BEGIN_SRC 
(setq org-log-done 'time)
#+END_SRC
这里当你将一个项目从一个TODO(未完成)状态改变为一个完成状态时,标题下面就会插入
一行"CLOSED:[timestamp]".如果你想和时间戳一起作一个记录,用:
#+BEGIN_SRC 
(setq org-log-done 'note)
#+END_SRC

*** 跟踪TODO状态变化
你可能想跟踪TODO状态的变化,可以只记录一个时间戳,也可以为变化作一个带时间戳的
记录.记录会被插入到标题之后形成列表.当有很多记录之后,你可能希望将记录取出放到抽屉
里.通过定制变量org-log-into-drawer可以实现这个功能.对于状态记录,Org可以实现基于
每个状态关键字的设置.实现方法是在每个后的括号中指定"!"(记录时间戳)
或"@"(作为一个记录).例如:
#+BEGIN_SRC 
#+TODO: TODO(t) WAIT(w@/!) | DONE(d!) CANCELED(c@)
#+END_SRC
将会设置TODO关键字和快速访问字母.以及当一个项目设为DONE时,会记录时间戳,
当状态变为WAIT或CANCELED时,会作一个记录.这个语法也适用于变量org-todo-keywords.

** 5.4 优先级
如果你广泛地使用Org模式,这样你就会有大量的TODO项.给它们设定优先级就很有必要.可以在任何类型的缓冲区中使用TODO
项的标题中加入一些标记(cookie)来设置它们的优先级,像这样:
#+BEGIN_SRC 
*** TODO [#A] Write letter to Sam Fortune
#+END_SRC
Org模式支持三个优先级:'A', 'B', 'C'. 'A'是最高级别,如不指定,'B'是默认的,优先级只有议程中有用.

| C-c ,  | 设置当前标题的优先级.按^^^选择一个级别,或者SPC删除标记(cookie) |
|--------+----------------------------------------------------------------|
| S-UP   |                                                                |
|--------+----------------------------------------------------------------|
| S-Down | 增加/减少当前标题的优先级                                      |

** 5.5 任务细分
很多时候将一个大的任务分成几个易于完成的小任务是明智的.你可以通过在TODO项目下新建一个大纲树,
并在子树上标记子任务来实现这个功能.为了能对已经完成的任务有个大致的了解,你可以在标题的任何地方
插入'[/]'或者'[%]'.当每个子任务的状态变化时,或者当你在标记上按C-c C-c时,这些标记状态也会随之更新
例如:
#+BEGIN_SRC 
* Organize Party [33%]
** TODO Call people [1/2]
*** TODO Peter
** Done Sarah
** TODO Buy food
** DONE Talk to neighbor
#+END_SRC

** 5.6 复选框
当纯文本中的项以'[]'开头时,就会变成一个复选框.复选框不会包含在全局TODO列表中,
所以它们很适合地将一个任务划分成几个简单的步骤.下面是一个复选框的例子:
#+BEGIN_SRC 
* TODO Organize party [1/3]
  - [-] call people [1/2]
    - [ ] Peter
    - [X] Sarah
  - [X] Order food
  - [ ] think about what music to play
#+END_SRC
* TODO Organize party [1/3]
  - [-] call people [1/2]
    - [ ] Peter
    - [X] Sarah
  - [X] order food
  - [ ] think about what music to play
复选框是分层工作的.所以如果一个复选框项目如果还有子复选框,触发子复选框将会使该复选框变化
以反映出一个,多个不服务复选框被选中.

下面是处理复选框的命令:
| C-c C-c | 触发复选框的状态或者(加上前缀)触发复选框的存在状态         |
|---------+------------------------------------------------------------|
| M-S-RET | 增加一个带有复选框的项.这只在光标处纯文本列表项中才起作用. |
|---------+------------------------------------------------------------|

* 6 标签
要为交叉相关的信息提供标签和上下文,一个不错的方法是给标题分配标签,Org模式能够广泛地支持标签.
每一个标题才能包含多个标签,它们位于标题的后面.标签可以包含字母,数字,'_'和'@'.
标签的前面和后面都应该有一个冒号,例如, ":work" 可以指定多个标签,就像":work:urgent:"
 标签默认是粗体,并和标题具有相同的颜色.

** 6.1标签继承
标签具有大纲树的继承结构.如果一个标题具有某个标签,它的所有标题也会继承这个标签.例如:在列表
#+BEGIN_SRC 
* Metting with the French group :work:
** Summary by Frank             :boss:notes:
*** TODO Perpare slides for him :action:
#+END_SRC
中,尽管没有明确标出,最后一个标题会有标签":work:",":boss:", ":note:",和":action:".
你也可以设定一个标签让所有的标题都继承,就好像标签在包含整个文件的第0级标题中指定了一样.
用下面的方法:
#+BEGIN_SRC 
#+FILETAGS: :Peter:Boss:Secret:
#+END_SRC

** 6.2设置标签                                                         :test:
在标题后可以很容易地输入标签.在冒号之后,M-TAB可以实例标签.也有一些专门的命令用于输入标签:
| C-c C-q | 为当前标题输入标签.Org模式即支持实例,也支持单键接口来设置标签,            |
|         | 回车标签会被插入,并放到第org-tags-column列.如果用前缀C-u,会把当前缓冲区中 |
|         | 所有的标签都对齐到那一列,                                                 |
|---------+---------------------------------------------------------------------------|
| C-c C-c | 当光标牌标题上时,这个命令同C-c C-q                                        |
Org支持基于一个标签列表来插入标签.默认情况这个列表中动态构建的,
